import React from 'react'
import Sketch from "react-p5";

export default function ConvexGraph({ points }) {
    
    let dataFromForm = points;
    const hull = [];

    let leftMost;
    let currentVertex;
    let index;
    let nextIndex = -1;
    let nextVertex;

    function setup() {
        Sketch.createCanvas(500, 500);
        for (let i = 0; i < dataFromForm.length; i++) {
            points.push(Sketch.createVector(dataFromForm[i].x, dataFromForm[i].y));
        }
        points.sort((a, b) => a.x - b.x);
        leftMost = points[0];
        currentVertex = leftMost;
        hull.push(currentVertex);
        nextVertex = points[1];
        index = 2;
    }

    function draw() {
        Sketch.background(0);

        Sketch.stroke(255);
        Sketch.strokeWeight(8);
        for (let p of points) {
            Sketch.applypoint(p.x, p.y);
        }

        Sketch.stroke(0, 0, 255);
        Sketch.fill(0, 0, 255, 50);
        Sketch.beginShape();
        for (let p of hull) {
            Sketch.vertex(p.x, p.y);
        }
        Sketch.endShape(Sketch.CLOSE);

        Sketch.stroke(0, 255, 0);
        Sketch.strokeWeight(16);
        Sketch.point(leftMost.x, leftMost.y);

        Sketch.stroke(200, 0, 255);
        Sketch.strokeWeight(16);
        Sketch.point(currentVertex.x, currentVertex.y);

        Sketch.stroke(0, 255, 0);
        Sketch.strokeWeight(2);
        Sketch.line(currentVertex.x, currentVertex.y, nextVertex.x, nextVertex.y);

        let checking = points[index];
        Sketch.stroke(255);
        Sketch.line(currentVertex.x, currentVertex.y, checking.x, checking.y);

        const a = Sketch.Vector.sub(nextVertex, currentVertex);
        const b = Sketch.Vector.sub(checking, currentVertex);
        const cross = a.cross(b);

        if (cross.z < 0) {
            nextVertex = checking;
            nextIndex = index;
        }

        index = index + 1;
        if (index === points.length) {
            if (nextVertex === leftMost) {
                console.log('done');
                Sketch.noLoop();
            } else {
                hull.push(nextVertex);
                currentVertex = nextVertex;
                index = 0;
                //points.splice(nextIndex, 1);
                nextVertex = leftMost;
            }
        }
        // }
        
       
    }


   
     return (<>
            <Sketch setup={setup} draw={draw} />
        </>)
}
